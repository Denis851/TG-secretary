from aiogram import Bot
from datetime import datetime
from services.storage import load_json
from config import USER_ID

MOOD_PATH = "data/mood.json"

async def ask_mood(bot: Bot):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üòÑ –û—Ç–ª–∏—á–Ω–æ", callback_data="mood:great")],
        [InlineKeyboardButton(text="üôÇ –ù–æ—Ä–º–∞–ª—å–Ω–æ", callback_data="mood:ok")],
        [InlineKeyboardButton(text="üòû –£—Å—Ç–∞–ª", callback_data="mood:tired")]
    ])
    await bot.send_message(USER_ID, "–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–π—á–∞—Å?", reply_markup=keyboard)


async def analyze_daily_mood(bot: Bot):
    moods = load_json(MOOD_PATH)
    today = datetime.now().strftime("%Y-%m-%d")

    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
    today_moods = [m for m in moods if m["time"].startswith(today)]

    if not today_moods:
        await bot.send_message(USER_ID, "üìä –°–µ–≥–æ–¥–Ω—è —Ç—ã –Ω–µ –æ—Ç–º–µ—á–∞–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.")
        return

    count = {"great": 0, "ok": 0, "tired": 0}
    for m in today_moods:
        count[m["mood"]] += 1

    total = sum(count.values())
    report = f"üìä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–∞ {today}:\n"
    report += f"üòÑ –û—Ç–ª–∏—á–Ω–æ: {count['great']}\n"
    report += f"üôÇ –ù–æ—Ä–º–∞–ª—å–Ω–æ: {count['ok']}\n"
    report += f"üòû –£—Å—Ç–∞–ª: {count['tired']}\n"

    # –í—ã–≥–æ—Ä–∞–Ω–∏–µ-–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    if count['tired'] > (total // 2):
        report += "\n‚ö†Ô∏è –°–µ–≥–æ–¥–Ω—è —Ç—ã —á–∞—â–µ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª —É—Å—Ç–∞–ª–æ—Å—Ç—å. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ—Ç–¥—ã—Ö!"

    await bot.send_message(USER_ID, report)
